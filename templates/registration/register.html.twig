{% extends 'base.html.twig' %}
{% block title %}Register{% endblock %}
{% block body %}
    <div class="register-container">
        <div class="logo-container">
            <img src="{{ asset('assets/images/logologin.png') }}" alt="Login Logo" class="login-logo">
        </div>
        {% for flash_error in app.flashes('verify_email_error') %}
            <div id="notification-verify" class="alert alert-danger alert-animated" role="alert">{{ flash_error }}</div>
        {% endfor %}

        {% for flash_error in app.flashes('registration_error') %}
            <div id="notification-registration" class="alert alert-danger alert-animated" role="alert">
                {% if flash_error == "There is already an account with this email" %}
                    Le compte existe déjà
                {% else %}
                    {{ flash_error }}
                {% endif %}
            </div>
        {% endfor %}

        <h1 class="register-title">Créer un compte</h1>
        {{ form_errors(registrationForm) }}
        {{ form_start(registrationForm, {'attr': {'class': 'register-form', 'id': 'registrationForm', 'novalidate': 'novalidate'}}) }}
            <div class="form-group">
                {{ form_row(registrationForm.email, {
                    'attr': {
                        'class': 'form-control',
                        'id': 'email'
                    }
                }) }}
                <div class="validation-feedback alert-danger" id="emailFeedback"></div>
            </div>
            <div class="form-group">
                <label for="password">Mot de passe</label>
                {{ form_widget(registrationForm.plainPassword, {
                    'attr': {
                        'class': 'form-control',
                        'id': 'password'
                    }
                }) }}
                <div class="password-requirements">
                    <div id="lengthCheck" class="requirement">Au moins 8 caractères</div>
                    <div id="upperCheck" class="requirement">Au moins une majuscule</div>
                    <div id="numberCheck" class="requirement">Au moins un chiffre</div>
                    <div id="specialCheck" class="requirement">Au moins un caractère spécial</div>
                </div>
            </div>
            <div class="form-group">
                <label for="confirmPassword">Confirmer le mot de passe</label>
                <input type="password" id="confirmPassword" class="form-control" required>
                <div class="validation-feedback alert-danger" id="confirmPasswordFeedback"></div>
            </div>
            <div class="form-group terms">
                {{ form_row(registrationForm.agreeTerms) }}
            </div>
            <button type="submit" class="btn btn-primary" id="submitBtn">S'inscrire</button>
            <button type="reset" class="btn btn-secondary" id="resetBtn">Réinitialiser</button>

        {{ form_end(registrationForm) }}
        <div class="login-link">
            Avez-vous déjà un compte ? <a href="{{ path('app_login') }}">Connectez-vous ici</a>
        </div>
    </div>

    <style>
        body {
            font-family: 'Arial', sans-serif;
            background-color: #f0f4f8;
            color: #333;
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            margin: 0;
        }
        .register-container {
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            padding: 2.5rem;
            width: 100%;
            max-width: 400px;
        }
        .register-title {
            text-align: center;
            color: #4c6ef5;
            margin-bottom: 1.5rem;
            font-size: 1.8rem;
            font-weight: 600;
        }
        .register-form .form-group {
            margin-bottom: 1.25rem;
        }
        .form-control {
            width: 100%;
            padding: 0.75rem;
            border: 1px solid #ddd;
            border-radius: 5px;
            font-size: 1rem;
            transition: all 0.3s ease;
        }
        .form-control:focus {
            border-color: #4c6ef5;
            box-shadow: 0 0 0 2px rgba(76, 110, 245, 0.1);
            outline: none;
        }
        .terms {
            margin: 1rem 0;
        }
        .btn-primary {
            width: 100%;
            padding: 0.75rem;
            font-size: 1rem;
            background-color: #4c6ef5;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
            margin-bottom: 1rem;
        }
        .btn-primary:hover {
            background-color: #3a5bb3;
        }
        .btn-primary:active {
            transform: translateY(1px);
        }
        .alert {
            background-color: #f8d7da;
            color: #721c24;
            border-radius: 5px;
            padding: 1rem;
            margin-bottom: 1.25rem;
            opacity: 1;
            transition: opacity 0.5s ease-in-out;
        }
        .alert-danger {
            color: #721c24;
            background-color: #f8d7da;
            border: 1px solid #f5c6cb;
            padding: 8px;
            border-radius: 4px;
            margin-top: 5px;
            font-size: 0.875rem;
        }
        .alert-animated {
            opacity: 0;
            transition: opacity 0.5s ease-in-out;
        }
        .alert-animated.show {
            opacity: 1;
        }
        .form-error {
            color: #dc3545;
            font-size: 0.875rem;
            margin-top: 0.25rem;
        }
        .login-link {
            text-align: center;
            margin-top: 1rem;
            font-size: 0.9rem;
            color: #666;
        }
        .login-link a {
            color: #4c6ef5;
            text-decoration: none;
            transition: color 0.3s ease;
        }
        .login-link a:hover {
            text-decoration: underline;
            color: #3a5bb3;
        }
        .logo-container {
            display: flex;
            justify-content: center;
            align-items: center;
            margin-bottom: 20px;
        }
        .login-logo {
            width: 150px;
            height: 150px;
        }
        .password-requirements {
            margin-top: 0.5rem;
            font-size: 0.8rem;
            transition: all 0.3s ease;
        }
        .requirement {
            color: #dc3545;
            margin-bottom: 0.25rem;
            transition: all 0.3s ease;
        }
        .requirement.valid {
            color: #28a745;
        }
        .requirement::before {
            content: '✖';
            margin-right: 0.5rem;
            transition: all 0.3s ease;
        }
        .requirement.valid::before {
            content: '✓';
        }
        .validation-feedback {
            display: none;
            margin-top: 0.25rem;
        }
        .validation-feedback:not(:empty) {
            display: block;
        }
        .btn-secondary {
            width: 100%;
            padding: 0.75rem;
            font-size: 1rem;
            background-color: #ccc;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }
        @media (max-width: 480px) {
            .register-container {
                padding: 1.5rem;
                margin: 1rem;
            }
        }
    </style>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            function waitForElements() {
                const form = document.getElementById('registrationForm');
                const emailInput = document.getElementById('registration_form_email');
                const emailFeedback = document.getElementById('emailFeedback');
                const passwordInput = document.getElementById('registration_form_plainPassword');
                const confirmPasswordInput = document.getElementById('confirmPassword');
                const lengthCheck = document.getElementById('lengthCheck');
                const upperCheck = document.getElementById('upperCheck');
                const numberCheck = document.getElementById('numberCheck');
                const specialCheck = document.getElementById('specialCheck');
                const confirmPasswordFeedback = document.getElementById('confirmPasswordFeedback');

                if (!form || !emailInput || !emailFeedback || !passwordInput || !confirmPasswordInput || 
                    !lengthCheck || !upperCheck || !numberCheck || !specialCheck || !confirmPasswordFeedback) {
                    setTimeout(waitForElements, 100);
                    return;
                }

                function showError(element, message) {
                    element.textContent = message;
                    element.style.display = 'block';
                    element.classList.add('show');
                }

                function hideError(element) {
                    element.textContent = '';
                    element.style.display = 'none';
                    element.classList.remove('show');
                }

                function validateEmail(email) {
                    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
                    const isValid = emailRegex.test(email);
                    if (!isValid) {
                        showError(emailFeedback, 'Veuillez entrer une adresse email valide');
                    } else {
                        hideError(emailFeedback);
                    }
                    emailInput.style.borderColor = isValid ? '#28a745' : '#dc3545';
                    return isValid;
                }

                function checkPasswordCriteria(password) {
                    const criteria = {
                        hasLength: password.length >= 8,
                        hasUpper: /[A-Z]/.test(password),
                        hasNumber: /[0-9]/.test(password),
                        hasSpecial: /[!@#$%^&*(),.?":{}|<>]/.test(password)
                    };

                    updateRequirement(lengthCheck, criteria.hasLength);
                    updateRequirement(upperCheck, criteria.hasUpper);
                    updateRequirement(numberCheck, criteria.hasNumber);
                    updateRequirement(specialCheck, criteria.hasSpecial);

                    return Object.values(criteria).every(Boolean);
                }

                function updateRequirement(element, isValid) {
                    if (isValid) {
                        element.classList.add('valid');
                        element.classList.remove('invalid');
                    } else {
                        element.classList.add('invalid');
                        element.classList.remove('valid');
                    }
                }

                function validateConfirmPassword() {
                    const isValid = passwordInput.value === confirmPasswordInput.value && passwordInput.value !== '';
                    if (!isValid) {
                        showError(confirmPasswordFeedback, 'Les mots de passe ne correspondent pas');
                    } else {
                        hideError(confirmPasswordFeedback);
                    }
                    confirmPasswordInput.style.borderColor = isValid ? '#28a745' : '#dc3545';
                    return isValid;
                }

                emailInput.addEventListener('input', function() {
                    validateEmail(this.value);
                });

                emailInput.addEventListener('blur', function() {
                    validateEmail(this.value);
                });

                passwordInput.addEventListener('input', function() {
                    checkPasswordCriteria(this.value);
                    validateConfirmPassword();
                });

                confirmPasswordInput.addEventListener('input', validateConfirmPassword);

                form.addEventListener('submit', function(e) {
                    const isEmailValid = validateEmail(emailInput.value);
                    const isPasswordValid = checkPasswordCriteria(passwordInput.value);
                    const isConfirmValid = validateConfirmPassword();

                    if (!isEmailValid || !isPasswordValid || !isConfirmValid) {
                        e.preventDefault();
                    }
                });

                const resetBtn = document.getElementById('resetBtn');
                if (resetBtn) {
                    resetBtn.addEventListener('click', function() {
                        form.reset();
                        emailFeedback.style.display = 'none';
                        confirmPasswordFeedback.style.display = 'none';
                        lengthCheck.classList.remove('valid', 'invalid');
                        upperCheck.classList.remove('valid', 'invalid');
                        numberCheck.classList.remove('valid', 'invalid');
                        specialCheck.classList.remove('valid', 'invalid');
                    });
                }
            }

            waitForElements();
        });
    </script>
{% endblock %}